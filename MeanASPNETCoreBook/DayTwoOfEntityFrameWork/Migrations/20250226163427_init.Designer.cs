// <auto-generated />
using DayTwoOfEntityFrameWork.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DayTwoOfEntityFrameWork.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250226163427_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Omid"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Saeed"
                        });
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            Title = "C# Programming"
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            Title = "Advanced EF Core"
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            Title = "EF Core for Beginners"
                        });
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReviewId");

                    b.HasIndex("BookId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            BookId = 1,
                            Comment = "Great Book"
                        },
                        new
                        {
                            ReviewId = 2,
                            BookId = 1,
                            Comment = "I love it"
                        },
                        new
                        {
                            ReviewId = 3,
                            BookId = 1,
                            Comment = "Very helpful."
                        },
                        new
                        {
                            ReviewId = 4,
                            BookId = 2,
                            Comment = "Great Book"
                        },
                        new
                        {
                            ReviewId = 5,
                            BookId = 3,
                            Comment = "Excellent resource"
                        });
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Book", b =>
                {
                    b.HasOne("DayTwoOfEntityFrameWork.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Review", b =>
                {
                    b.HasOne("DayTwoOfEntityFrameWork.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("DayTwoOfEntityFrameWork.Models.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
